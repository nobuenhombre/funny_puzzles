СЕМЬ монет
==========

Если разделить пополам - остается одна монетка

Вариант
m1 + m2 + m3 != m4 + m5 + m6
дает решения!

1.1 [(m1? + m2? + m3?) != (m4? + m5? + m6?)] -> @ m1?, m2?, m3?, m4?, m5?, m6?, m7G @
далее присовокупив сюда решение от шести монет получим
что такой вариант дает
min 3, max 4 соответсвенно он не подходит

попробуем разделить мельче, как в варианте с 6-ю монетами
остаочная монетка вычислится логически

1.1 [(m1? + m2?) == (m3? + m4?)] -> @ m1G, m2G, m3G, m4G, m5?, m6?, m7? @
1.2A [m4G != m5?] -> $ m1G, m2G, m3G, m4G, m5F, m6G, m7G $
1.2B [m4G == m5?] -> @ m1G, m2G, m3G, m4G, m5G, m6?, m7? @
1.3A [m4G == m6?] -> @ m1G, m2G, m3G, m4G, m5G, m6G, m7F @
1.3B [m4G != m6?] -> @ m1G, m2G, m3G, m4G, m5G, m6F, m7G @


2.1 [(m1? + m2?) != (m3? + m4?)] -> @ m1?, m2?, m3?, m4?, m5G, m6G, m7G @
-- теперь решение для 4-х монет
    2.1.2  [m1? == m2?]  -> @ m1G, m2G, m3?, m4?, m5G, m6G, m7G @
    2.1.3A [m1G == m3?]  -> $ m1G, m2G, m3G, m4F, m5G, m6G, m7G $
    2.1.3B [m1G !== m3?] -> $ m1G, m2G, m3F, m4G, m5G, m6G, m7G $

    2.2.2  [m1? != m2?] -> @ m1?, m2?, m3G, m4G, m5G, m6G, m7G @
    2.2.3A [m3G == m1?] -> $ m1G, m2F, m3G, m4G, m5G, m6G, m7G $
    2.2.3B [m3G != m1?] -> $ m1F, m2G, m3G, m4G, m5G, m6G, m7G $

ВЫВОДЫ
======
ГРУППА из 7-ти монет
МИНИМАЛЬНОЕ число взвешиваний = 3
МАКСИМАЛЬНОЕ число взвешиваний = 3

Схема взвешиваний описана.